"""initial migration

Revision ID: 0df20192e2ef
Revises: 
Create Date: 2025-01-26 14:55:05.107861

"""
from typing import Sequence, Union
import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0df20192e2ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cuisines',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cuisines'))
    )
    op.create_table('product_categories',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_categories'))
    )
    op.create_table('product_shops',
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('logo', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_shops'))
    )
    op.create_table('product_vendors',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_vendors'))
    )
    op.create_table('recipe_categories',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_categories'))
    )
    op.create_table('recipe_tags',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_tags'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('access_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=43), nullable=False),
    sa.Column('created_at', fastapi_users_db_sqlalchemy.generics.TIMESTAMPAware(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_access_tokens_user_id_users'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('token', name=op.f('pk_access_tokens'))
    )
    op.create_index(op.f('ix_access_tokens_created_at'), 'access_tokens', ['created_at'], unique=False)
    op.create_table('products',
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('uom', sa.String(length=10), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('pack', sa.Boolean(), nullable=False),
    sa.Column('current_price', sa.Integer(), nullable=False),
    sa.Column('property_clarification', sa.String(length=30), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('thumbnail', sa.String(length=255), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['product_categories.id'], name=op.f('fk_products_category_id_product_categories')),
    sa.ForeignKeyConstraint(['shop_id'], ['product_shops.id'], name=op.f('fk_products_shop_id_product_shops')),
    sa.ForeignKeyConstraint(['vendor_id'], ['product_vendors.id'], name=op.f('fk_products_vendor_id_product_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    op.create_table('profiles',
    sa.Column('user_pk', sa.Integer(), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=True),
    sa.Column('first_name', sa.String(length=40), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_pk'], ['users.id'], name=op.f('fk_profiles_user_pk_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profiles')),
    sa.UniqueConstraint('user_pk', name=op.f('uq_profiles_user_pk'))
    )
    op.create_table('recipe_subcategories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['recipe_categories.id'], name=op.f('fk_recipe_subcategories_category_id_recipe_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_subcategories'))
    )
    op.create_table('recipes',
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('prep_time_minutes', sa.Integer(), nullable=False),
    sa.Column('cook_time_minutes', sa.Integer(), nullable=False),
    sa.Column('preliminary_preparation', sa.String(length=50), nullable=False),
    sa.Column('servings', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.String(length=10), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('calories_per_serving', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('cuisine_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['recipe_categories.id'], name=op.f('fk_recipes_category_id_recipe_categories')),
    sa.ForeignKeyConstraint(['cuisine_id'], ['cuisines.id'], name=op.f('fk_recipes_cuisine_id_cuisines')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipes')),
    sa.UniqueConstraint('url', name=op.f('uq_recipes_url'))
    )
    op.create_table('product_price_historys',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('discount', sa.Integer(), nullable=False),
    sa.Column('date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_price_historys_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_price_historys'))
    )
    op.create_table('products_associations',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('similar_product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_products_associations_product_id_products')),
    sa.ForeignKeyConstraint(['similar_product_id'], ['products.id'], name=op.f('fk_products_associations_similar_product_id_products')),
    sa.PrimaryKeyConstraint('product_id', 'similar_product_id', name=op.f('pk_products_associations'))
    )
    op.create_table('recipe_ingredients',
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('uom', sa.String(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('main_product_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['main_product_id'], ['products.id'], name=op.f('fk_recipe_ingredients_main_product_id_products')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_ingredients_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_ingredients'))
    )
    op.create_table('recipe_instructions',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_instructions_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_instructions'))
    )
    op.create_table('recipe_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('comment', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name=op.f('fk_recipe_reviews_profile_id_profiles')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_reviews_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_reviews'))
    )
    op.create_table('recipe_subcategory_associations',
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_subcategory_associations_recipe_id_recipes')),
    sa.ForeignKeyConstraint(['subcategory_id'], ['recipe_subcategories.id'], name=op.f('fk_recipe_subcategory_associations_subcategory_id_recipe_subcategories'))
    )
    op.create_table('recipe_tag_associations',
    sa.Column('recipe_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_tag_associations_recipe_id_recipes')),
    sa.ForeignKeyConstraint(['tag_id'], ['recipe_tags.id'], name=op.f('fk_recipe_tag_associations_tag_id_recipe_tags'))
    )
    op.create_table('ingredient_product_assiociations',
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('ingredients_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ingredients_id'], ['recipe_ingredients.id'], name=op.f('fk_ingredient_product_assiociations_ingredients_id_recipe_ingredients')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_ingredient_product_assiociations_product_id_products'))
    )
    # ### end Alembic commands ###

    # ТРИГЕР ДЛЯ АВТООБНОВЛЕНИЯ ЦЕНЫ ПРОДУКТА ИЗ ИСТОРИИ
    op.execute("""
    CREATE OR REPLACE FUNCTION update_current_price()
    RETURNS TRIGGER AS $$
    BEGIN
        UPDATE products
        SET current_price = NEW.price
        WHERE id = NEW.product_id;
        RETURN NEW;
    END;
    $$ LANGUAGE plpgsql;
    """)

    op.execute("""
    CREATE TRIGGER trigger_update_current_price
    AFTER INSERT ON product_price_historys
    FOR EACH ROW
    EXECUTE FUNCTION update_current_price();
    """)


def downgrade() -> None:
    #УДАЛЕНИЕ ТРИГЕРА
    op.execute("""
    DROP TRIGGER IF EXISTS trigger_update_current_price ON product_price_history;
    """)
    op.execute("""
    DROP FUNCTION IF EXISTS update_current_price();
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ingredient_product_assiociations')
    op.drop_table('recipe_tag_associations')
    op.drop_table('recipe_subcategory_associations')
    op.drop_table('recipe_reviews')
    op.drop_table('recipe_instructions')
    op.drop_table('recipe_ingredients')
    op.drop_table('products_associations')
    op.drop_table('product_price_historys')
    op.drop_table('recipes')
    op.drop_table('recipe_subcategories')
    op.drop_table('profiles')
    op.drop_table('products')
    op.drop_index(op.f('ix_access_tokens_created_at'), table_name='access_tokens')
    op.drop_table('access_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('recipe_tags')
    op.drop_table('recipe_categories')
    op.drop_table('product_vendors')
    op.drop_table('product_shops')
    op.drop_table('product_categories')
    op.drop_table('cuisines')
    # ### end Alembic commands ###
